# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go
permissions:
  contents: write

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
  FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Set up Fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      # Using Firebase configuration from GitHub Secrets for all commands

      - name: Clean
        run: make clean

      - name: Test
        run: make test

      - name: Build
        run: make package-windows

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: racemate-windows
          path: |
            build/racemate.exe
            *.exe

  release:
    name: Create Release
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Set up Fyne
        run: go install fyne.io/tools/cmd/fyne@latest

      - name: Build release binary
        run: make package-windows

      - name: Download artifacts from build job
        uses: actions/download-artifact@v4
        with:
          name: racemate-windows
          path: artifacts

      - name: Generate checksums
        run: |
          cd build
          $hash = (Get-FileHash -Algorithm SHA256 racemate.exe).Hash.ToLower()
          "$hash *racemate.exe" | Out-File -FilePath racemate.exe.sha256 -Encoding utf8 -NoNewline
          $env:RACEMATE_CHECKSUM = $hash
          echo "RACEMATE_CHECKSUM=$env:RACEMATE_CHECKSUM" >> $env:GITHUB_ENV

      - name: Generate Short SHA
        id: short_sha
        run: echo "SHORT_SHA=$('${{ github.sha }}'.Substring(0, 7))" >> $env:GITHUB_ENV

      - name: Generate Release Version
        id: version
        run: echo "RELEASE_VERSION=v${{ github.run_number }}.${{ github.run_attempt }}-${{ env.SHORT_SHA }}" >> $env:GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          body: |
            Automated release for commit ${{ github.sha }}
            Run #${{ github.run_number }}.${{ github.run_attempt }}
          files: |
            build/racemate.exe
            build/racemate.exe.sha256
            artifacts/*.exe
          draft: false
          prerelease: false
